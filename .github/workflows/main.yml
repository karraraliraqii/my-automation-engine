name: Repost Tweet with Media

on:
  repository_dispatch:
    types: [repost-tweet-with-media]

jobs:
  repost:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests requests_oauthlib

      - name: Download media and Post to Twitter
        env:
          # Secrets will be passed from the Cloudflare Worker
          APP_KEY: ${{ github.event.client_payload.action.app_key }}
          APP_SECRET: ${{ github.event.client_payload.action.app_secret }}
          ACCESS_TOKEN: ${{ github.event.client_payload.action.access_token }}
          ACCESS_SECRET: ${{ github.event.client_payload.action.refresh_token }} # Note: This is a placeholder, real access secret not needed for 2.0 API upload
          TWEET_TEXT: ${{ github.event.client_payload.tweet_text }}
          MEDIA_URL: ${{ github.event.client_payload.media_url }}
        run: |
          import os
          import requests
          import json
          from requests_oauthlib import OAuth1Session

          # --- Get secrets from environment ---
          app_key = os.environ['APP_KEY']
          app_secret = os.environ['APP_SECRET']
          access_token = os.environ['ACCESS_TOKEN']
          access_secret = os.environ['ACCESS_SECRET'] # Placeholder
          tweet_text = os.environ['TWEET_TEXT']
          media_url = os.environ['MEDIA_URL']

          # --- Download the media file ---
          print("Downloading media from:", media_url)
          media_response = requests.get(media_url, stream=True)
          media_response.raise_for_status()
          filename = "temp_media"
          with open(filename, "wb") as f:
              for chunk in media_response.iter_content(chunk_size=8192):
                  f.write(chunk)
          
          file_size = os.path.getsize(filename)
          print(f"Media downloaded successfully. Size: {file_size} bytes")

          # --- Step 1: Initialize Media Upload ---
          print("Initializing media upload...")
          oauth = OAuth1Session(app_key, client_secret=app_secret, resource_owner_key=access_token, resource_owner_secret=access_secret)
          init_url = 'https://upload.twitter.com/1.1/media/upload.json'
          init_params = {'command': 'INIT', 'total_bytes': file_size, 'media_type': media_response.headers['Content-Type']}
          init_res = oauth.post(init_url, data=init_params)
          init_res.raise_for_status()
          media_id = init_res.json()['media_id_string']
          print("Media upload initialized. Media ID:", media_id)

          # --- Step 2: Append Media Chunks ---
          print("Appending media chunks...")
          append_url = 'https://upload.twitter.com/1.1/media/upload.json'
          segment_id = 0
          with open(filename, 'rb') as f:
              for chunk in iter(lambda: f.read(4 * 1024 * 1024), b''):
                  append_params = {'command': 'APPEND', 'media_id': media_id, 'segment_index': segment_id}
                  files = {'media': chunk}
                  append_res = oauth.post(append_url, data=append_params, files=files)
                  append_res.raise_for_status()
                  print(f"Appended segment {segment_id}")
                  segment_id += 1
          
          # --- Step 3: Finalize Media Upload ---
          print("Finalizing media upload...")
          finalize_url = 'https://upload.twitter.com/1.1/media/upload.json'
          finalize_params = {'command': 'FINALIZE', 'media_id': media_id}
          finalize_res = oauth.post(finalize_url, data=finalize_params)
          # Twitter may take time to process the media
          if finalize_res.status_code != 200:
              print("Finalize response not 200, checking state...")
              check_status_params = {'command': 'STATUS', 'media_id': media_id}
              import time
              for _ in range(5): # try 5 times
                  time.sleep(5) # wait 5 seconds
                  status_res = oauth.get(finalize_url, params=check_status_params)
                  status_data = status_res.json()
                  if status_data.get('processing_info', {}).get('state') == 'succeeded':
                      print("Media processing succeeded.")
                      break
                  print("Media still processing...")
              else:
                  print("Media processing did not succeed in time.")
                  raise Exception(f"Finalize failed: {status_res.text}")

          # --- Step 4: Post Tweet with Media ID ---
          print("Posting tweet with media...")
          tweet_url = 'https://api.twitter.com/2/tweets'
          payload = {"text": tweet_text, "media": {"media_ids": [media_id]}}
          # We need to re-create the oauth session for API v2
          oauth_v2 = OAuth1Session(app_key, client_secret=app_secret, resource_owner_key=access_token, resource_owner_secret=access_secret)
          tweet_res = oauth_v2.post(tweet_url, json=payload)
          
          if tweet_res.status_code == 201:
              print("Tweet posted successfully!")
          else:
              print(f"Error posting tweet: {tweet_res.status_code}")
              print(tweet_res.text)
              raise Exception("Failed to post tweet")
